scaffoldWidget("MyCharts", edit = FALSE)
install()
install.packages("htmlwidgets")
install.packages("devtools")
scaffoldWidget("MyCharts", edit = FALSE)
library("devtools")
library("devtools")
scaffoldWidget("MyCharts", edit = FALSE)
devtools::scaffoldWidget("MyCharts", edit = FALSE)
packer::scaffold_widget("MyCharts")
install()
packer::npm_install()
MyCharts()
MyCharts()
packer::bundle()
packer::bundle()
devtools::load_all()
devtool::install()
devtools::install()
library(myCharts)
library(shiny); runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
devtools::load_all()
devtools::install()
devtools::install()
packer::bundle()
devtools::load_all()
devtools::install()
devtools::install()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
MyCharts()
MyCharts("123")
?shinyWidgetOutput
?shinyRenderWidget
?shinyRenderWidget
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
packageVersion("htmlwidgets")
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
devtools::document()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R', display.mode = "showcase")
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
devtools::load_all()
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
server <- function(input, output) {
output$HILF_MIR <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
output$testing <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "PointForecastFirst", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
output$blabla <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "IntervalFirst", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
output$textout <- renderText({
paste("", input$foo)
})
}
packer::bundle()
devtools::load_all()
devtools::load_all()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
runApp('R/hello.R')
library(shiny); runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
devtools::load_all()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
devtools::load_all()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
library(shiny); runApp('R/hello.R')
devtools::load_all()
devtools::load_all()
packer::bundle()
devtools::load_all()
library(shiny)
library(myCharts)
library(bslib)
ui <- page_fluid(
titlePanel("Chartjs Widget"),
mainPanel(
card(MyChartsOutput("HILF_MIR")),
card(MyChartsOutput("testing")),
card(MyChartsOutput("blabla")),
)
)
# Define server logic ----
server <- function(input, output) {
output$HILF_MIR <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
output$testing <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "PointForecastFirst", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
output$blabla <- renderMyCharts({
# The MyCharts widget
MyCharts(insertion_type = "IntervalFirst", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
}
# Run the app ----
shinyApp(ui = ui, server = server)
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
devtools::load_all()
rm(list = c("server"))
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
library(shiny); runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
devtools::load_all()
devtools::load_all()
runApp('R/hello.R')
runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
check()
devtools::check()
devtools::check()
use_mit_license()
use_mit_license(copyright_holder = NULL)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
use_mit_license(copyright_holder = NULL)
use_mit_license(copyright_holder = NULL)
install.packages("usethis")
use_mit_license(copyright_holder = NULL)
use_mit_license("Sebastian Krause")
use_mit_license("Sebastian Krause")
usethis::use_mit_license("Sebastian Krause")
document()
check()
devtools::check()
use_mit_license(copyright_holder = NULL)
usethis::use_mit_license(copyright_holder = NULL)
usethis::use_mit_license("Sebastian Krause")
usethis::use_readme_rmd()
library(myCharts)
library(shiny)
library(bslib)
ui <- page_fluid(
titlePanel("Chartjs Widget"),
mainPanel(
card(MyChartsOutput("testchart")),
)
)
server <- function(input, output) {
output$testchart <- renderMyCharts({
# The  widget
MyCharts(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
}
## basic example code
library(myCharts)
library(shiny)
# library(bslib)
ui <- page_fluid(
titlePanel("Chartjs Widget"),
mainPanel(
card(MyChartsOutput("testchart")),
)
)
server <- function(input, output) {
output$testchart <- renderMyCharts({
# The  widget
MyCharts(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5), top_band= c(6,6,6,6), bottom_band = c(4,4,4,4), labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
}
## basic example code
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::load_all()
rm(list = c("server"))
devtools::load_all()
runApp('R/hello.R')
devtools::check()
devtools::check()
devtools::document()
devtools::document()
devtools::document()
?ConfidenceIntervals
devtoll
devtools::check()
devtools::build_readme()
devtools::load_all()
devtools::build_readme()
library(myCharts)
library(shiny)
library(bslib)
ui <- page_fluid(
titlePanel("Chartjs Widget"),
mainPanel(
card(ConfidenceIntervalsOutput("testchart")),
)
)
server <- function(input, output) {
output$testchart <- renderConfidenceIntervals({
# The  widget
ConfidenceIntervals(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5),
top_band= c(6,6,6,6), bottom_band = c(4,4,4,4),
labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
}
# Run the app ----
# shinyApp(ui = ui, server = server)
runApp('R/hello.R')
devtools::build_readme()
devtools::build_readme()
library(shiny); runApp('R/hello.R')
runApp('R/hello.R')
devtools::build_readme()
devtools::build_readme()
runApp('R/hello.R')
devtools::build_readme()
devtools::build_readme()
# library(ConfidenceIntervals)
library(shiny)
library(bslib)
ui <- page_fluid(
titlePanel("Chartjs Widget"),
mainPanel(
card(ConfidenceIntervalsOutput("testchart")),
)
)
server <- function(input, output) {
output$testchart <- renderConfidenceIntervals({
# The  widget
ConfidenceIntervals(insertion_type = "OnlyIntervals", chart_data = c(5,5,5,5),
top_band= c(6,6,6,6), bottom_band = c(4,4,4,4),
labels= c("Eins", "zwei", "drei", "vier", "sechs"))
})
}
# Run the app ----
# shinyApp(ui = ui, server = server)
devtools::build_readme()
devtools::build_readme()
devtools::load_all()
devtools::load_all()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
packer::bundle()
packer::bundle()
packer::bundle()
packer::bundle()
library(shiny); runApp('R/hello.R')
runApp('R/hello.R')
packer::bundle()
devtools::load_all()
packer::bundle()
devtools::load_all()
runApp('R/hello.R')
packer::bundle()
packer::bundle()
packer::bundle()
